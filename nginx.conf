user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
google_perftools_profiles /var/cache/nginx/tcmalloc_nginx;

events {
    worker_connections  1024;
}

http {
	include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
	index index.html index.htm;
	
	charset utf-8;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 2k;
    large_client_header_buffers 4 4k;
    client_max_body_size 50m;
	
	server_tokens off;
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;

	#开启压缩
	gzip on;
	# 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
	# gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 5;
	# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/webp image/jpeg image/gif image/png;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
 
	client_body_buffer_size  512k;
	proxy_connect_timeout    60;
	proxy_read_timeout       60;
	proxy_send_timeout       60;
	proxy_buffer_size        16k;
	proxy_buffers            4 64k;
	proxy_busy_buffers_size 128k;
	proxy_temp_file_write_size 128k;
	proxy_temp_path   /var/cache/nginx/proxy_temp_dir;
	#设置Web缓存区名称为cache_one，内存缓存空间大小为500MB，7天没有被访问的内容自动清除，硬盘缓存空间大小为5GB。
	#proxy_cache_path和proxy_temp_path设置的目录需要在同一分区，因为它们之间是硬链接的关系。
	proxy_cache_path /var/cache/nginx/proxy_cache_dir levels=1:2 keys_zone=my_cache_hdd1:500m inactive=7d max_size=5g use_temp_path=off;
	#proxy_cache_key "$host$uri$is_args$args";
	
	keepalive_timeout  60;
    client_header_timeout 10;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 10;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
	
	## 这里取得经过多层CND之后原始用户的IP地址
	map $http_x_forwarded_for  $clientRealIp {
		""  $remote_addr;
		~^(?P<firstAddr>[0-9\.]+),?.*$	$firstAddr;
	}
	
	## 用户的 IP 地址 $binary_remote_addr 作为 Key，每个 IP 地址最多有 20 个并发连接
	## 超过直接返回 503 错误，不处理请求
	limit_conn_zone $clientRealIp zone=TotalConnLimitZone:10m ;
	limit_conn  TotalConnLimitZone  20;
	limit_conn_log_level notice;

	## 用户的 IP 地址 $binary_remote_addr 作为 Key，每个 IP 地址每秒处理 20 个请求
	## 超过直接返回 503 错误
	limit_req_zone $clientRealIp zone=ConnLimitZone:10m  rate=20r/s;
	limit_req_log_level notice;
	
	upstream TomcatServer{
		server 127.0.0.1:8080 weight=1;
	}
	
	server {
		listen 80;
		#server_name localhost;
		
		server_name host_name;
        return 301 https://$server_name$request_uri;
	}
	
	server{
		listen 443;
		server_name host_name;
		
		ssl on;
		ssl_certificate quanyingtec/1_quanyingtec.com_bundle.crt;
        ssl_certificate_key quanyingtec/2_quanyingtec.com.key;
        ssl_session_timeout 5m;
        ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
		ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
		ssl_session_cache         shared:SSL:50m;
        ssl_prefer_server_ciphers on;
		
		root /home;
		
		location /SchoolRepairManage {				
            try_files $uri $uri/ /SchoolRepairManage/index.html;
			expires 60d;
			proxy_cache my_cache_hdd1;
			proxy_cache_valid 200 304 301 302 7d;
			proxy_cache_valid any 1h;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;  
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
		
		location /SRSFiles {
			root /usr/local;
			expires 60d;
			proxy_cache my_cache_hdd1;
			proxy_cache_valid 200 304 301 302 7d;
			proxy_cache_valid any 1h;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;  
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
		}
		
		location /SchoolRepairSupport {
			proxy_pass http://TomcatServer/SchoolRepairSupport;
		}
	}

    include /etc/nginx/conf.d/*.conf;
}